<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/message-user.css">
    <title>Chat</title>
</head>

<body>
    <div class="message-container">
        <div class="message-user-header">
            <p>Some User</p>
        </div>
        <div class="messages" id="messages">
            <% for (var i=0; i < messages.length; i++) { %>
                <div
                    class="message-item message-item-<%= (messages[i].fromUserId.toLowerCase() === user.toLowerCase()) ? 'right' : 'left' %>">
                    <div class="message-item-content">
                        <p>
                            <%= messages[i].message %>
                        </p>
                        <small>
                            Sent at <i>
                                <%= messages[i].createdOn %>
                            </i>
                        </small>
                    </div>
                </div>
                <% } %>
        </div>
    </div>
    <div class="form-container">
        <form id="send-message-form">
            <input name="input" id="message-input" autocomplete="off" />
            <button id="sendButton" type="submit">Send</button>
        </form>
    </div>
    <script src="/socket.io/socket.io.js"></script>

    <script>
        var socket = io();

        var messages = document.getElementById('messages');
        var form = document.getElementById('send-message-form');
        var input = document.getElementById('message-input');
        var user = "<%= user %>"
        var reciever = "<%= receiver %>"
        var room = "<%= room %>"

        socket.emit("join", room)

        console.log(user + "  " + reciever + "  " + room)

        form.addEventListener('submit', function (e) {
            e.preventDefault();
            if (input.value) {
                socket.emit('chat message', { from: user, to: reciever, message: input.value, room: room })
            }
        });

        // Recieve from the server
        socket.on('get message', function (msg) {
            // Create the elements for the message

            var messageItem = document.createElement('div');
            var messageItemContent = document.createElement('div');
            var p = document.createElement('p');
            var s = document.createElement('small');
            var i = document.createElement('i');

            // Set text content's for elements
            p.textContent = msg.msg;
            s.textContent = 'Sent at ';
            i.textContent = '10:23PM';
            if (user === msg.from) {
                messageItem.className = "message-item message-item-right";
            } else {
                messageItem.className = "message-item message-item-left";
            }
            messageItemContent.className = "message-item-content";
            // Bind those elemnts together
            s.appendChild(i);
            messageItemContent.appendChild(p);
            messageItemContent.appendChild(s);
            messageItem.appendChild(messageItemContent);

            // Add the messageItem element to the messages element
            messages.appendChild(messageItem);

            // Clear the input field
            input.value = '';
            console.log('after appending', messages.children)
            window.scrollTo(0,document.body.scrollHeight);
        });
    </script>
</body>

</html>